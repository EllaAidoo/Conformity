# AWSTemplateFormatVersion: '2010-09-09'
# Description: Cleaned pipeline using GitHub as source instead of CodeCommit.
 
# Resources:
#   # --------------------
#   # Pipeline
#   # --------------------
#   PipelineC660917D:
#     Type: AWS::CodePipeline::Pipeline
#     Properties:
#       RoleArn: !GetAtt PipelineRole.Arn
#       Stages:
#         # Source Stage (GitHub)
#         - Name: Source
#           Actions:
#             - Name: GitHubSource
#               ActionTypeId:
#                 Category: Source
#                 Owner: AWS
#                 Provider: CodeStarSourceConnection
#                 Version: '1'
#               Configuration:
#                 ConnectionArn: arn:aws:codeconnections:us-east-1:637612693678:connection/5c074055-287c-4ec2-b8a3-6491f0266bdd
#                 FullRepositoryId: EllaAidoo/Conformity
#                 BranchName: main
#               OutputArtifacts:
#                 - Name: SourceOutput
#               RunOrder: 1
 
#         # Build/Test Stage
#         - Name: Test
#           Actions:
#             - Name: Build
#               ActionTypeId:
#                 Category: Build
#                 Owner: AWS
#                 Provider: CodeBuild
#                 Version: '1'
#               Configuration:
#                 ProjectName: !Ref Project2AA28D40
#               InputArtifacts:
#                 - Name: SourceOutput
#               OutputArtifacts:
#                 - Name: BuildArtifact
#               RunOrder: 1
 
#         # Deploy Stage
#         - Name: Deploy
#           Actions:
#             - Name: Deploy
#               ActionTypeId:
#                 Category: Deploy
#                 Owner: AWS
#                 Provider: CloudFormation
#                 Version: '1'
#               Configuration:
#                 ActionMode: CREATE_UPDATE
#                 Capabilities: CAPABILITY_NAMED_IAM
#                 StackName: MyApplicationStack
#                 TemplatePath: SourceOutput::app-template.yml
#                 RoleArn: !GetAtt DeployRole.Arn
#               InputArtifacts:
#                 - Name: SourceOutput
#               RunOrder: 1
 
#       ArtifactStore:
#         Type: S3
#         Location: !Ref ArtifactBucket
 
#   # --------------------
#   # Artifact Store
#   # --------------------
#   ArtifactBucket:
#     Type: AWS::S3::Bucket
#     DeletionPolicy: Delete
#     UpdateReplacePolicy: Delete
 
#   # --------------------
#   # Pipeline Role
#   # --------------------
#   PipelineRole:
#     Type: AWS::IAM::Role
#     Properties:
#       AssumeRolePolicyDocument:
#         Version: '2012-10-17'
#         Statement:
#           - Effect: Allow
#             Principal:
#               Service: codepipeline.amazonaws.com
#             Action: sts:AssumeRole
#       Policies:
#         - PolicyName: PipelinePolicy
#           PolicyDocument:
#             Version: '2012-10-17'
#             Statement:
#               - Effect: Allow
#                 Action:
#                   - codeconnections:UseConnection
#                   - codestar-connections:UseConnection
#                 Resource: arn:aws:codeconnections:us-east-1:637612693678:connection/5c074055-287c-4ec2-b8a3-6491f0266bdd
#               - Effect: Allow
#                 Action:
#                   - s3:PutObject
#                   - s3:GetObject
#                   - s3:GetObjectVersion
#                   - s3:GetBucketVersioning
#                 Resource:
#                   - !Sub arn:aws:s3:::${ArtifactBucket}
#                   - !Sub arn:aws:s3:::${ArtifactBucket}/*
#               - Effect: Allow
#                 Action:
#                   - codebuild:BatchGetBuilds
#                   - codebuild:StartBuild
#                 Resource: '*'
#               - Effect: Allow
#                 Action:
#                   - cloudformation:CreateStack
#                   - cloudformation:UpdateStack
#                   - cloudformation:DescribeStacks
#                   - cloudformation:DescribeStackEvents
#                   - cloudformation:DeleteStack
#                 Resource: '*'
#               - Effect: Allow
#                 Action:
#                   - iam:PassRole
#                 Resource: !GetAtt DeployRole.Arn
 
#   # --------------------
#   # Deploy Role
#   # --------------------
#   DeployRole:
#     Type: AWS::IAM::Role
#     Properties:
#       AssumeRolePolicyDocument:
#         Version: '2012-10-17'
#         Statement:
#           - Effect: Allow
#             Principal:
#               Service: cloudformation.amazonaws.com
#             Action: sts:AssumeRole
#       ManagedPolicyArns:
#         - arn:aws:iam::aws:policy/AdministratorAccess
 
#   # --------------------
#   # CodeBuild Project
#   # --------------------
#   Project2AA28D40:
#     Type: AWS::CodeBuild::Project
#     Properties:
#       Name: ConformityBuildProject
#       Artifacts:
#         Type: CODEPIPELINE
#       Environment:
#         ComputeType: BUILD_GENERAL1_SMALL
#         Image: aws/codebuild/standard:5.0
#         Type: LINUX_CONTAINER
#       ServiceRole: !GetAtt ProjectRole.Arn
#       Source:
#         Type: CODEPIPELINE
 
#   # --------------------
#   # CodeBuild Role
#   # --------------------
#   ProjectRole:
#     Type: AWS::IAM::Role
#     Properties:
#       AssumeRolePolicyDocument:
#         Version: '2012-10-17'
#         Statement:
#           - Effect: Allow
#             Principal:
#               Service: codebuild.amazonaws.com
#             Action: sts:AssumeRole
#       Policies:
#         - PolicyName: CodeBuildPolicy
#           PolicyDocument:
#             Version: '2012-10-17'
#             Statement:
#               # S3 access for artifacts
#               - Effect: Allow
#                 Action:
#                   - s3:GetObject
#                   - s3:GetObjectVersion
#                   - s3:PutObject
#                 Resource:
#                   - !Sub arn:aws:s3:::${ArtifactBucket}
#                   - !Sub arn:aws:s3:::${ArtifactBucket}/*
#               # CloudWatch Logs access (generalized)
#               - Effect: Allow
#                 Action:
#                   - logs:CreateLogGroup
#                   - logs:CreateLogStream
#                   - logs:PutLogEvents
#                 Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
AWSTemplateFormatVersion: '2010-09-09'
Description: CI/CD Pipeline with GitHub Source and Conformity Scan integrated in CodeBuild
 
Parameters:
  ConformityApiKey:
    Type: String
    NoEcho: true
    Description: "API key for Conformity scans"
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
 
Resources:
 
  # --------------------
  # Artifact Store
  # --------------------
  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
 
  # --------------------
  # Pipeline Role
  # --------------------
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
 
  # --------------------
  # Deploy Role
  # --------------------
  DeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
 
  # --------------------
  # CodeBuild Role
  # --------------------
  ProjectRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
 
  # --------------------
  # CodeBuild Project with Conformity Scan
  # --------------------
  ConformityBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: ConformityBuildProject2
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: CONFORMITY_API_KEY
            Value: !Ref ConformityApiKey
          - Name: CONFORMITY_REGION
            Value: us-west-2
      ServiceRole: !GetAtt ProjectRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            build:
              commands:
                - echo "Build completed successfully"
 
  # --------------------
  # Pipeline
  # --------------------
  CICDPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: arn:aws:codeconnections:us-east-1:YOUR_CONNECTION_ID
                FullRepositoryId: YOUR_GITHUB_USERNAME/YOUR_REPO
                BranchName: main
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: ConformityBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref ConformityBuildProject
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: MyApplicationStack
                TemplatePath: BuildArtifact::app-template.yml
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt DeployRole.Arn
              RunOrder: 1